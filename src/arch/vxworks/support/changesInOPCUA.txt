From 7ba4739c388cb4b3d532c653454ac931183376c7 Mon Sep 17 00:00:00 2001
From: Jose Cabral <cabral@fortiss.org>
Date: Fri, 25 Nov 2016 16:31:53 +0100
Subject: Changes to make it run in VxWorks


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 430fdee6..a345e2a1 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -143,13 +143,13 @@ list(APPEND open62541_LIBRARIES "") # Collect libraries
 
 if(NOT UA_COMPILE_AS_CXX AND (CMAKE_COMPILER_IS_GNUCC OR "x${CMAKE_C_COMPILER_ID}" STREQUAL "xClang"))
     # Compiler
-    add_definitions(-std=c99 -pipe -Wall -Wextra -Werror -Wformat -Wno-unused-parameter
+    add_definitions(-std=c99 -pipe -Wall -Wextra -Wformat -Wno-unused-parameter
                     -Wno-unused-function -Wno-unused-label -Wpointer-arith -Wreturn-type -Wsign-compare
                     -Wmultichar -Wstrict-overflow -Wcast-qual -Wmissing-prototypes -Wstrict-prototypes
                     -Winit-self -Wuninitialized -Wformat-security -Wformat-nonliteral)
-     if(NOT WIN32 AND NOT CYGWIN AND NOT QNXNTO)
-        add_definitions(-Wshadow -Wconversion -fvisibility=hidden -fPIC)
-     endif()
+    if(NOT WIN32 AND NOT CYGWIN)
+        add_definitions(-Wshadow -Wconversion -fvisibility=hidden)# -fPIC)
+    endif()
 
     # Linker
     set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "") # cmake sets -rdynamic by default
diff --git a/include/ua_config.h.in b/include/ua_config.h.in
index 7e6c1f93..924572da 100644
--- a/include/ua_config.h.in
+++ b/include/ua_config.h.in
@@ -5,10 +5,14 @@
 #ifndef UA_CONFIG_H_
 #define UA_CONFIG_H_
 
+#include <vxWorks.h>
+#include <sockLib.h>
+#include <selectLib.h>
+#include <inetLib.h>
+
 #ifdef __cplusplus
 extern "C" {
 #endif
-
 /**
  * Library Version
  * --------------- */
@@ -47,9 +51,9 @@ extern "C" {
  * ----------------- */
 #ifndef _XOPEN_SOURCE
  #if defined(__QNX__) || defined(__QNXNTO__)
-  # define _XOPEN_SOURCE 600
+  //# define _XOPEN_SOURCE 600
  #else
-  # define _XOPEN_SOURCE 500
+ // # define _XOPEN_SOURCE 500
  #endif
 #endif
 #ifndef _DEFAULT_SOURCE
@@ -66,6 +70,8 @@ extern "C" {
 # define _CRT_SECURE_NO_WARNINGS
 #endif
 
+
+
 #include <stddef.h>
 
 /* Include stdint.h or workaround for older Visual Studios */
@@ -263,6 +269,8 @@ typedef uint8_t bool;
 # define UA_BINARY_OVERLAYABLE_FLOAT 0
 #endif
 
+
+
 #ifdef __cplusplus
 } // extern "C"
 #endif
diff --git a/plugins/ua_network_tcp.c b/plugins/ua_network_tcp.c
index e0772b47..0d4db09b 100644
--- a/plugins/ua_network_tcp.c
+++ b/plugins/ua_network_tcp.c
@@ -37,7 +37,7 @@
 # define WIN32_INT
 # include <arpa/inet.h>
 # include <netinet/in.h>
-# include <sys/select.h>
+/*# include <sys/select.h>*/
 # include <sys/ioctl.h>
 # include <fcntl.h>
 # include <unistd.h> // read, write, close
@@ -205,9 +205,17 @@ static UA_StatusCode socket_set_nonblocking(SOCKET sockfd) {
     if(ioctlsocket(sockfd, FIONBIO, &iMode) != NO_ERROR)
         return UA_STATUSCODE_BADINTERNALERROR;
 #else
-    int opts = fcntl(sockfd, F_GETFL);
-    if(opts < 0 || fcntl(sockfd, F_SETFL, opts|O_NONBLOCK) < 0)
-        return UA_STATUSCODE_BADINTERNALERROR;
+    int opts = fcntl(sockfd, F_GETFL, 0);
+    //if (opts < 0){
+      //return 3;
+    //}
+    int on = TRUE;
+
+
+    if(ioctl(sockfd, FIONBIO, &on) < 0){
+      return 4;
+    }
+
 #endif
     return UA_STATUSCODE_GOOD;
 }
@@ -408,13 +416,21 @@ ServerNetworkLayerTCP_start(UA_ServerNetworkLayer *nl, UA_Logger logger) {
     /* Set socket options */
     int optval = 1;
     if(setsockopt(newsock, SOL_SOCKET, SO_REUSEADDR,
-                  (const char *)&optval, sizeof(optval)) == -1 ||
-       socket_set_nonblocking(newsock) != UA_STATUSCODE_GOOD) {
-        UA_LOG_WARNING(layer->logger, UA_LOGCATEGORY_NETWORK,
-                       "Error during setting of server socket options");
-        CLOSESOCKET(newsock);
-        return UA_STATUSCODE_BADINTERNALERROR;
-    }
+            (const char *)&optval, sizeof(optval)) == -1){
+          UA_LOG_WARNING(layer->logger, UA_LOGCATEGORY_NETWORK,
+                                 "Error 1 during setting of server socket options");
+                  CLOSESOCKET(newsock);
+                  return UA_STATUSCODE_BADINTERNALERROR;
+        }
+
+    UA_StatusCode res = socket_set_nonblocking(newsock);
+
+      if( res != UA_STATUSCODE_GOOD){
+          UA_LOG_WARNING(layer->logger, UA_LOGCATEGORY_NETWORK,
+                                 "Error 2 during setting of server socket options: no = %d", res);
+                  CLOSESOCKET(newsock);
+                  return UA_STATUSCODE_BADINTERNALERROR;
+        }
 
     /* Bind socket to address */
     struct sockaddr_in serv_addr;
diff --git a/plugins/ua_network_udp.c b/plugins/ua_network_udp.c
index 1d1756b9..a7e23db9 100644
--- a/plugins/ua_network_udp.c
+++ b/plugins/ua_network_udp.c
@@ -14,7 +14,7 @@
 # include <errno.h> // errno, EINTR
 # include <fcntl.h> // fcntl
 # include <strings.h> //bzero
-# include <sys/select.h>
+/*# include <sys/select.h>*/
 # include <netinet/in.h>
 # include <netinet/tcp.h>
 # include <sys/socketvar.h>
diff --git a/src/ua_types_encoding_binary.c b/src/ua_types_encoding_binary.c
index bfb33f80..a591c9c5 100644
--- a/src/ua_types_encoding_binary.c
+++ b/src/ua_types_encoding_binary.c
@@ -379,6 +379,8 @@ unpack754(uint64_t i, unsigned bits, unsigned expbits) {
 #define FLOAT_INF 0x7f800000
 #define FLOAT_NEG_INF 0xff800000
 #define FLOAT_NEG_ZERO 0x80000000
+#define NAN FLOAT_NAN
+#define INFINITY FLOAT_INF
 
 static UA_StatusCode
 Float_encodeBinary(UA_Float const *src, const UA_DataType *_) {
@@ -386,7 +388,7 @@ Float_encodeBinary(UA_Float const *src, const UA_DataType *_) {
     UA_UInt32 encoded;
     //cppcheck-suppress duplicateExpression
     if(f != f) encoded = FLOAT_NAN;
-    else if(f == 0.0f) encoded = signbit(f) ? FLOAT_NEG_ZERO : 0;
+    else if(f == 0.0f) encoded = 0;//signbit(f) ? FLOAT_NEG_ZERO : 0;
     //cppcheck-suppress duplicateExpression
     else if(f/f != f/f) encoded = f > 0 ? FLOAT_INF : FLOAT_NEG_INF;
     else encoded = (UA_UInt32)pack754(f, 32, 8);
@@ -421,7 +423,7 @@ Double_encodeBinary(UA_Double const *src, const UA_DataType *_) {
     UA_UInt64 encoded;
     //cppcheck-suppress duplicateExpression
     if(d != d) encoded = DOUBLE_NAN;
-    else if(d == 0.0) encoded = signbit(d) ? DOUBLE_NEG_ZERO : 0;
+    else if(d == 0.0) encoded = 0;//signbit(d) ? DOUBLE_NEG_ZERO : 0;
     //cppcheck-suppress duplicateExpression
     else if(d/d != d/d) encoded = d > 0 ? DOUBLE_INF : DOUBLE_NEG_INF;
     else encoded = pack754(d, 64, 11);
