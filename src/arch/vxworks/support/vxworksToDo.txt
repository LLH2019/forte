Usage:

To compile, place the VxWorks.cmake file in CMake\share\cmake-3.6\Modules\Platform where the first CMake folder is the installation folder. Then configure CMake for crosscompiling using the following settings:

Operating System: VxWorks
Compilers->C: $(ROOT_FOLDER)/gnu/4.3.3-vxworks-6.9/x86-win32/bin/ccpentium.exe
Compilers->C++: $(ROOT_FOLDER)/gnu/4.3.3-vxworks-6.9/x86-win32/bin/c++pentium.exe
Target Root: $(ROOT_FOLDER)/customBosch/vxworks-6.9

The deployment of VxWorks was done only in one device, so the folders might change. Check ../CMakeLists.txt and change the folders according to your device and please let us know your changes so we can improve.

Copy and paste the .out file in the file system of the target using FTP or somehitng else available in the device. Then use the ld to load the module and sp funtionaName to run the funtion as a thread. The module has to be loaded everytime the system restarts.

ld 0,0,"forte.out" //loads the module
sp startForte //starts forte

MQTT:

Apply the patch from the file changesInPaho.txt to the paho.mqtt.c git repository. The patch was applied to the commit 5571f9b1cdfba5e628be44e4e84962ede6497e84 with susscefull results

OPC_UA:

Apply the patch from the file changesInOPCUA.txt to the open62541 git repository. The patch was applied to the commit be5af5786998c3ddfc9e36858dc86cff1368cfbd with susscefull results. After applying, the open62541.h file that is generated and later included by forte must be changed by deleting the following includes:

#include <vxWorks.h>
#include <sockLib.h>
#include <selectLib.h>
#include <inetLib.h>

